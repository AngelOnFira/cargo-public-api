pub mod rustdoc_json
#[non_exhaustive] pub enum rustdoc_json::BuildError
pub enum variant rustdoc_json::BuildError::CargoMetadataError(cargo_metadata::errors::Error)
pub enum variant rustdoc_json::BuildError::General(alloc::string::String)
pub enum variant rustdoc_json::BuildError::IoError(std::io::error::Error)
pub enum variant rustdoc_json::BuildError::VirtualManifest(std::path::PathBuf)
impl core::fmt::Debug for rustdoc_json::BuildError
pub fn rustdoc_json::BuildError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::fmt::Display for rustdoc_json::BuildError
pub fn rustdoc_json::BuildError::fmt(&self, __formatter: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::error::Error for rustdoc_json::BuildError
pub fn rustdoc_json::BuildError::source(&self) -> core::option::Option<&(dyn core::error::Error + 'static)>
impl core::convert::From<cargo_metadata::errors::Error> for rustdoc_json::BuildError
impl core::convert::From<std::io::error::Error> for rustdoc_json::BuildError
pub fn rustdoc_json::BuildError::from(source: cargo_metadata::errors::Error) -> Self
pub fn rustdoc_json::BuildError::from(source: std::io::error::Error) -> Self
pub struct rustdoc_json::BuildOptions
pub struct rustdoc_json::Builder
impl rustdoc_json::Builder
pub const fn rustdoc_json::Builder::all_features(self, all_features: bool) -> Self
pub fn rustdoc_json::Builder::build(self) -> core::result::Result<std::path::PathBuf, rustdoc_json::BuildError>
pub fn rustdoc_json::Builder::cap_lints(self, cap_lints: core::option::Option<impl core::convert::AsRef<str>>) -> Self
pub fn rustdoc_json::Builder::features<I: core::iter::traits::collect::IntoIterator<Item = S>, S: core::convert::AsRef<str>>(self, features: I) -> Self
pub fn rustdoc_json::Builder::manifest_path(self, manifest_path: impl core::convert::AsRef<std::path::Path>) -> Self
pub const fn rustdoc_json::Builder::no_default_features(self, no_default_features: bool) -> Self
pub fn rustdoc_json::Builder::package(self, package: impl core::convert::AsRef<str>) -> Self
pub const fn rustdoc_json::Builder::quiet(self, quiet: bool) -> Self
pub fn rustdoc_json::Builder::target(self, target: alloc::string::String) -> Self
pub fn rustdoc_json::Builder::target_dir(self, target_dir: impl core::convert::AsRef<std::path::Path>) -> Self
pub fn rustdoc_json::Builder::toolchain(self, toolchain: impl core::convert::Into<core::option::Option<alloc::string::String>>) -> Self
impl core::fmt::Debug for rustdoc_json::Builder
pub fn rustdoc_json::Builder::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::default::Default for rustdoc_json::Builder
pub fn rustdoc_json::Builder::default() -> Self
pub fn rustdoc_json::build(options: rustdoc_json::Builder) -> core::result::Result<std::path::PathBuf, rustdoc_json::BuildError>
