pub enum rustdoc_json::BuildError
pub enum variant rustdoc_json::BuildError::CargoMetadataError(cargo_metadata::Error)
pub enum variant rustdoc_json::BuildError::CargoTomlError(cargo_toml::Error)
pub enum variant rustdoc_json::BuildError::General(String)
pub enum variant rustdoc_json::BuildError::IoError(std::io::Error)
pub enum variant rustdoc_json::BuildError::VirtualManifest(PathBuf)
pub fn rustdoc_json::BuildError::fmt(&self, __formatter: &mut std::fmt::Formatter<'_>) -> std::fmt::Result
pub fn rustdoc_json::BuildError::fmt(&self, f: &mut $crate::fmt::Formatter<'_>) -> $crate::fmt::Result
pub fn rustdoc_json::BuildError::from(source: cargo_metadata::Error) -> Self
pub fn rustdoc_json::BuildError::from(source: cargo_toml::Error) -> Self
pub fn rustdoc_json::BuildError::from(source: std::io::Error) -> Self
pub fn rustdoc_json::BuildError::source(&self) -> std::option::Option<&(dyn std::error::Error + 'static)>
pub fn rustdoc_json::BuildOptions::default() -> Self
pub fn rustdoc_json::BuildOptions::fmt(&self, f: &mut $crate::fmt::Formatter<'_>) -> $crate::fmt::Result
pub fn rustdoc_json::BuildOptions::manifest_path(self, manifest_path: impl AsRef<Path>) -> Self
pub fn rustdoc_json::BuildOptions::quiet(self, quiet: bool) -> Self
pub fn rustdoc_json::BuildOptions::toolchain(self, toolchain: impl AsRef<OsStr>) -> Self
pub fn rustdoc_json::build(options: BuildOptions) -> Result<PathBuf, BuildError>
pub mod rustdoc_json
pub struct rustdoc_json::BuildOptions
