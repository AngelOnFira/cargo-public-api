use std::collections::HashSet;

#[test]
fn syntect_v4_6_0() {
    assert_public_items(
        include_str!("./rustdoc_json/syntect-v4.6.0-by-rust-nightly-2021-11-15.json"),
        EXPECTED_PUBLIC_ITEMS_IN_SYNTECT_V4_6_0,
    );
}

fn assert_public_items(rustdoc_json_str: &str, expected_public_items: &[&str]) {
    let actual = public_items::from_rustdoc_json_str(rustdoc_json_str).unwrap();

    let expected = string_hash_set_from_str_array(expected_public_items);

    assert_eq!(actual, expected);
}

fn string_hash_set_from_str_array(str_array: &[&str]) -> HashSet<String> {
    str_array.iter().map(|s| String::from(*s)).collect()
}

/// This list is sourced by browsing around
/// <https://docs.rs/syntect/4.6.0/syntect/all.html>. If an item is in the below
/// list, it can be found by browsing the above URL. Note that I have added an
/// explicit "syntect::" prefix on all items in the interest of clarity. Also
/// note that the JSON contains some extra items from
/// <https://github.com/bitflags/bitflags/commit/a74e4577d5> that are not
/// present in <https://docs.rs/syntect/4.6.0/syntect/all.html> due to different
/// `bitflags` versions used.
static EXPECTED_PUBLIC_ITEMS_IN_SYNTECT_V4_6_0: &[&str] = &[
    "syntect::dumps::dump_binary",
    "syntect::dumps::dump_to_file",
    "syntect::dumps::dump_to_writer",
    "syntect::dumps::from_binary",
    "syntect::dumps::from_dump_file",
    "syntect::dumps::from_reader",
    "syntect::dumps",
    "syntect::easy::HighlightFile::highlight_lines",
    "syntect::easy::HighlightFile::new",
    "syntect::easy::HighlightFile::reader",
    "syntect::easy::HighlightFile",
    "syntect::easy::HighlightLines::highlight",
    "syntect::easy::HighlightLines::new",
    "syntect::easy::HighlightLines",
    "syntect::easy::ScopeRegionIterator::new",
    "syntect::easy::ScopeRegionIterator",
    "syntect::easy",
    "syntect::highlighting::Color::a",
    "syntect::highlighting::Color::b",
    "syntect::highlighting::Color::BLACK",
    "syntect::highlighting::Color::g",
    "syntect::highlighting::Color::r",
    "syntect::highlighting::Color::WHITE",
    "syntect::highlighting::Color",
    "syntect::highlighting::FontStyle::all",
    "syntect::highlighting::FontStyle::bits",
    "syntect::highlighting::FontStyle::BOLD",
    "syntect::highlighting::FontStyle::complement",
    "syntect::highlighting::FontStyle::contains",
    "syntect::highlighting::FontStyle::difference",
    "syntect::highlighting::FontStyle::empty",
    "syntect::highlighting::FontStyle::from_bits_truncate",
    "syntect::highlighting::FontStyle::from_bits_unchecked",
    "syntect::highlighting::FontStyle::from_bits",
    "syntect::highlighting::FontStyle::insert",
    "syntect::highlighting::FontStyle::intersection",
    "syntect::highlighting::FontStyle::intersects",
    "syntect::highlighting::FontStyle::is_all",
    "syntect::highlighting::FontStyle::is_empty",
    "syntect::highlighting::FontStyle::ITALIC",
    "syntect::highlighting::FontStyle::remove",
    "syntect::highlighting::FontStyle::set",
    "syntect::highlighting::FontStyle::symmetric_difference",
    "syntect::highlighting::FontStyle::toggle",
    "syntect::highlighting::FontStyle::UNDERLINE",
    "syntect::highlighting::FontStyle::union",
    "syntect::highlighting::FontStyle",
    "syntect::highlighting::Highlighter::get_default",
    "syntect::highlighting::Highlighter::new",
    "syntect::highlighting::Highlighter::style_for_stack",
    "syntect::highlighting::Highlighter::style_mod_for_stack",
    "syntect::highlighting::Highlighter",
    "syntect::highlighting::HighlightIterator::new",
    "syntect::highlighting::HighlightIterator",
    "syntect::highlighting::HighlightState::new",
    "syntect::highlighting::HighlightState::path",
    "syntect::highlighting::HighlightState",
    "syntect::highlighting::ParseThemeError::ColorShemeScopeIsNotObject",
    "syntect::highlighting::ParseThemeError::ColorShemeSettingsIsNotObject",
    "syntect::highlighting::ParseThemeError::DuplicateSettings",
    "syntect::highlighting::ParseThemeError::IncorrectColor",
    "syntect::highlighting::ParseThemeError::IncorrectFontStyle",
    "syntect::highlighting::ParseThemeError::IncorrectSettings",
    "syntect::highlighting::ParseThemeError::IncorrectSyntax",
    "syntect::highlighting::ParseThemeError::IncorrectUnderlineOption",
    "syntect::highlighting::ParseThemeError::ScopeParse",
    "syntect::highlighting::ParseThemeError::ScopeSelectorIsNotString",
    "syntect::highlighting::ParseThemeError::UndefinedScopeSettings",
    "syntect::highlighting::ParseThemeError::UndefinedSettings",
    "syntect::highlighting::ParseThemeError",
    "syntect::highlighting::RangedHighlightIterator::new",
    "syntect::highlighting::RangedHighlightIterator",
    "syntect::highlighting::ScopeSelector::does_match",
    "syntect::highlighting::ScopeSelector::excludes",
    "syntect::highlighting::ScopeSelector::extract_scopes",
    "syntect::highlighting::ScopeSelector::extract_single_scope",
    "syntect::highlighting::ScopeSelector::path",
    "syntect::highlighting::ScopeSelector",
    "syntect::highlighting::ScopeSelectors::does_match",
    "syntect::highlighting::ScopeSelectors::selectors",
    "syntect::highlighting::ScopeSelectors",
    "syntect::highlighting::ScoredStyle::background",
    "syntect::highlighting::ScoredStyle::font_style",
    "syntect::highlighting::ScoredStyle::foreground",
    "syntect::highlighting::ScoredStyle",
    "syntect::highlighting::SettingsError::Plist",
    "syntect::highlighting::SettingsError",
    "syntect::highlighting::Style::apply",
    "syntect::highlighting::Style::background",
    "syntect::highlighting::Style::font_style",
    "syntect::highlighting::Style::foreground",
    "syntect::highlighting::Style",
    "syntect::highlighting::StyleModifier::apply",
    "syntect::highlighting::StyleModifier::background",
    "syntect::highlighting::StyleModifier::font_style",
    "syntect::highlighting::StyleModifier::foreground",
    "syntect::highlighting::StyleModifier",
    "syntect::highlighting::Theme::author",
    "syntect::highlighting::Theme::name",
    "syntect::highlighting::Theme::scopes",
    "syntect::highlighting::Theme::settings",
    "syntect::highlighting::Theme",
    "syntect::highlighting::ThemeItem::scope",
    "syntect::highlighting::ThemeItem::style",
    "syntect::highlighting::ThemeItem",
    "syntect::highlighting::ThemeSet::add_from_folder",
    "syntect::highlighting::ThemeSet::discover_theme_paths",
    "syntect::highlighting::ThemeSet::get_theme",
    "syntect::highlighting::ThemeSet::load_defaults",
    "syntect::highlighting::ThemeSet::load_from_folder",
    "syntect::highlighting::ThemeSet::load_from_reader",
    "syntect::highlighting::ThemeSet::new",
    "syntect::highlighting::ThemeSet::themes",
    "syntect::highlighting::ThemeSet",
    "syntect::highlighting::ThemeSettings::accent",
    "syntect::highlighting::ThemeSettings::active_guide",
    "syntect::highlighting::ThemeSettings::background",
    "syntect::highlighting::ThemeSettings::bracket_contents_foreground",
    "syntect::highlighting::ThemeSettings::bracket_contents_options",
    "syntect::highlighting::ThemeSettings::brackets_background",
    "syntect::highlighting::ThemeSettings::brackets_foreground",
    "syntect::highlighting::ThemeSettings::brackets_options",
    "syntect::highlighting::ThemeSettings::caret",
    "syntect::highlighting::ThemeSettings::find_highlight_foreground",
    "syntect::highlighting::ThemeSettings::find_highlight",
    "syntect::highlighting::ThemeSettings::foreground",
    "syntect::highlighting::ThemeSettings::guide",
    "syntect::highlighting::ThemeSettings::gutter_foreground",
    "syntect::highlighting::ThemeSettings::gutter",
    "syntect::highlighting::ThemeSettings::highlight_foreground",
    "syntect::highlighting::ThemeSettings::highlight",
    "syntect::highlighting::ThemeSettings::inactive_selection_foreground",
    "syntect::highlighting::ThemeSettings::inactive_selection",
    "syntect::highlighting::ThemeSettings::line_highlight",
    "syntect::highlighting::ThemeSettings::minimap_border",
    "syntect::highlighting::ThemeSettings::misspelling",
    "syntect::highlighting::ThemeSettings::phantom_css",
    "syntect::highlighting::ThemeSettings::popup_css",
    "syntect::highlighting::ThemeSettings::selection_background",
    "syntect::highlighting::ThemeSettings::selection_border",
    "syntect::highlighting::ThemeSettings::selection_foreground",
    "syntect::highlighting::ThemeSettings::selection",
    "syntect::highlighting::ThemeSettings::shadow",
    "syntect::highlighting::ThemeSettings::stack_guide",
    "syntect::highlighting::ThemeSettings::tags_foreground",
    "syntect::highlighting::ThemeSettings::tags_options",
    "syntect::highlighting::ThemeSettings",
    "syntect::highlighting::UnderlineOption::None",
    "syntect::highlighting::UnderlineOption::SquigglyUnderline",
    "syntect::highlighting::UnderlineOption::StippledUnderline",
    "syntect::highlighting::UnderlineOption::Underline",
    "syntect::highlighting::UnderlineOption",
    "syntect::highlighting",
    "syntect::html::append_highlighted_html_for_styled_line",
    "syntect::html::ClassedHTMLGenerator::finalize",
    "syntect::html::ClassedHTMLGenerator::new_with_class_style",
    "syntect::html::ClassedHTMLGenerator::new",
    "syntect::html::ClassedHTMLGenerator::parse_html_for_line_which_includes_newline",
    "syntect::html::ClassedHTMLGenerator::parse_html_for_line",
    "syntect::html::ClassedHTMLGenerator",
    "syntect::html::ClassStyle::Spaced",
    "syntect::html::ClassStyle::SpacedPrefixed",
    "syntect::html::ClassStyle",
    "syntect::html::css_for_theme_with_class_style",
    "syntect::html::css_for_theme",
    "syntect::html::highlighted_html_for_file",
    "syntect::html::highlighted_html_for_string",
    "syntect::html::IncludeBackground::IfDifferent",
    "syntect::html::IncludeBackground::No",
    "syntect::html::IncludeBackground::Yes",
    "syntect::html::IncludeBackground",
    "syntect::html::line_tokens_to_classed_spans",
    "syntect::html::start_highlighted_html_snippet",
    "syntect::html::styled_line_to_highlighted_html",
    "syntect::html::tokens_to_classed_html",
    "syntect::html::tokens_to_classed_spans",
    "syntect::html",
    "syntect::LoadingError::BadPath",
    "syntect::LoadingError::Io",
    "syntect::LoadingError::ParseSyntax",
    "syntect::LoadingError::ParseTheme",
    "syntect::LoadingError::ReadSettings",
    "syntect::LoadingError::WalkDir",
    "syntect::LoadingError",
    "syntect::parsing::ATOM_LEN_BITS",
    "syntect::parsing::BasicScopeStackOp::Pop",
    "syntect::parsing::BasicScopeStackOp::Push",
    "syntect::parsing::BasicScopeStackOp",
    "syntect::parsing::ClearAmount::All",
    "syntect::parsing::ClearAmount::TopN",
    "syntect::parsing::ClearAmount",
    "syntect::parsing::MatchPower::0",
    "syntect::parsing::MatchPower",
    "syntect::parsing::ParseScopeError::TooLong",
    "syntect::parsing::ParseScopeError::TooManyAtoms",
    "syntect::parsing::ParseScopeError",
    "syntect::parsing::ParseState::new",
    "syntect::parsing::ParseState::parse_line",
    "syntect::parsing::ParseState",
    "syntect::parsing::ParseSyntaxError::BadFileRef",
    "syntect::parsing::ParseSyntaxError::EmptyFile",
    "syntect::parsing::ParseSyntaxError::InvalidScope",
    "syntect::parsing::ParseSyntaxError::InvalidYaml",
    "syntect::parsing::ParseSyntaxError::MainMissing",
    "syntect::parsing::ParseSyntaxError::MissingMandatoryKey",
    "syntect::parsing::ParseSyntaxError::RegexCompileError",
    "syntect::parsing::ParseSyntaxError::TypeMismatch",
    "syntect::parsing::ParseSyntaxError",
    "syntect::parsing::Regex::is_match",
    "syntect::parsing::Regex::new",
    "syntect::parsing::Regex::regex_str",
    "syntect::parsing::Regex::search",
    "syntect::parsing::Regex::try_compile",
    "syntect::parsing::Regex",
    "syntect::parsing::Region::new",
    "syntect::parsing::Region::pos",
    "syntect::parsing::Region",
    "syntect::parsing::SCOPE_REPO",
    "syntect::parsing::Scope::atom_at",
    "syntect::parsing::Scope::build_string",
    "syntect::parsing::Scope::is_empty",
    "syntect::parsing::Scope::is_prefix_of",
    "syntect::parsing::Scope::len",
    "syntect::parsing::Scope::new",
    "syntect::parsing::Scope",
    "syntect::parsing::ScopeRepository::atom_str",
    "syntect::parsing::ScopeRepository::build",
    "syntect::parsing::ScopeRepository::to_string",
    "syntect::parsing::ScopeRepository",
    "syntect::parsing::ScopeStack::apply_with_hook",
    "syntect::parsing::ScopeStack::apply",
    "syntect::parsing::ScopeStack::as_slice",
    "syntect::parsing::ScopeStack::bottom_n",
    "syntect::parsing::ScopeStack::debug_print",
    "syntect::parsing::ScopeStack::does_match",
    "syntect::parsing::ScopeStack::from_vec",
    "syntect::parsing::ScopeStack::is_empty",
    "syntect::parsing::ScopeStack::len",
    "syntect::parsing::ScopeStack::new",
    "syntect::parsing::ScopeStack::pop",
    "syntect::parsing::ScopeStack::push",
    "syntect::parsing::ScopeStack::scopes",
    "syntect::parsing::ScopeStack",
    "syntect::parsing::ScopeStackOp::Clear",
    "syntect::parsing::ScopeStackOp::Noop",
    "syntect::parsing::ScopeStackOp::Pop",
    "syntect::parsing::ScopeStackOp::Push",
    "syntect::parsing::ScopeStackOp::Restore",
    "syntect::parsing::ScopeStackOp",
    "syntect::parsing::syntax_definition::CaptureMapping",
    "syntect::parsing::syntax_definition::context_iter",
    "syntect::parsing::syntax_definition::Context::clear_scopes",
    "syntect::parsing::syntax_definition::Context::match_at",
    "syntect::parsing::syntax_definition::Context::meta_content_scope",
    "syntect::parsing::syntax_definition::Context::meta_include_prototype",
    "syntect::parsing::syntax_definition::Context::meta_scope",
    "syntect::parsing::syntax_definition::Context::new",
    "syntect::parsing::syntax_definition::Context::patterns",
    "syntect::parsing::syntax_definition::Context::prototype",
    "syntect::parsing::syntax_definition::Context::uses_backrefs",
    "syntect::parsing::syntax_definition::Context",
    "syntect::parsing::syntax_definition::ContextId::new",
    "syntect::parsing::syntax_definition::ContextId",
    "syntect::parsing::syntax_definition::ContextReference::ByScope",
    "syntect::parsing::syntax_definition::ContextReference::Direct",
    "syntect::parsing::syntax_definition::ContextReference::File",
    "syntect::parsing::syntax_definition::ContextReference::id",
    "syntect::parsing::syntax_definition::ContextReference::Inline",
    "syntect::parsing::syntax_definition::ContextReference::Named",
    "syntect::parsing::syntax_definition::ContextReference::resolve",
    "syntect::parsing::syntax_definition::ContextReference",
    "syntect::parsing::syntax_definition::MatchIter",
    "syntect::parsing::syntax_definition::MatchOperation::None",
    "syntect::parsing::syntax_definition::MatchOperation::Pop",
    "syntect::parsing::syntax_definition::MatchOperation::Push",
    "syntect::parsing::syntax_definition::MatchOperation::Set",
    "syntect::parsing::syntax_definition::MatchOperation",
    "syntect::parsing::syntax_definition::MatchPattern::captures",
    "syntect::parsing::syntax_definition::MatchPattern::has_captures",
    "syntect::parsing::syntax_definition::MatchPattern::new",
    "syntect::parsing::syntax_definition::MatchPattern::operation",
    "syntect::parsing::syntax_definition::MatchPattern::regex_with_refs",
    "syntect::parsing::syntax_definition::MatchPattern::regex",
    "syntect::parsing::syntax_definition::MatchPattern::regex",
    "syntect::parsing::syntax_definition::MatchPattern::scope",
    "syntect::parsing::syntax_definition::MatchPattern::with_prototype",
    "syntect::parsing::syntax_definition::MatchPattern",
    "syntect::parsing::syntax_definition::Pattern::Include",
    "syntect::parsing::syntax_definition::Pattern::Match",
    "syntect::parsing::syntax_definition::Pattern",
    "syntect::parsing::syntax_definition::SyntaxDefinition::contexts",
    "syntect::parsing::syntax_definition::SyntaxDefinition::file_extensions",
    "syntect::parsing::syntax_definition::SyntaxDefinition::first_line_match",
    "syntect::parsing::syntax_definition::SyntaxDefinition::hidden",
    "syntect::parsing::syntax_definition::SyntaxDefinition::load_from_str",
    "syntect::parsing::syntax_definition::SyntaxDefinition::name",
    "syntect::parsing::syntax_definition::SyntaxDefinition::scope",
    "syntect::parsing::syntax_definition::SyntaxDefinition::variables",
    "syntect::parsing::syntax_definition::SyntaxDefinition",
    "syntect::parsing::syntax_definition",
    "syntect::parsing::SyntaxDefinition", // Note that this is a re-export
    "syntect::parsing::SyntaxReference::file_extensions",
    "syntect::parsing::SyntaxReference::first_line_match",
    "syntect::parsing::SyntaxReference::hidden",
    "syntect::parsing::SyntaxReference::name",
    "syntect::parsing::SyntaxReference::scope",
    "syntect::parsing::SyntaxReference::variables",
    "syntect::parsing::SyntaxReference",
    "syntect::parsing::SyntaxSet::find_syntax_by_extension",
    "syntect::parsing::SyntaxSet::find_syntax_by_first_line",
    "syntect::parsing::SyntaxSet::find_syntax_by_name",
    "syntect::parsing::SyntaxSet::find_syntax_by_path",
    "syntect::parsing::SyntaxSet::find_syntax_by_scope",
    "syntect::parsing::SyntaxSet::find_syntax_by_token",
    "syntect::parsing::SyntaxSet::find_syntax_for_file",
    "syntect::parsing::SyntaxSet::find_syntax_plain_text",
    "syntect::parsing::SyntaxSet::find_unlinked_contexts",
    "syntect::parsing::SyntaxSet::into_builder",
    "syntect::parsing::SyntaxSet::load_defaults_newlines",
    "syntect::parsing::SyntaxSet::load_defaults_nonewlines",
    "syntect::parsing::SyntaxSet::load_from_folder",
    "syntect::parsing::SyntaxSet::new",
    "syntect::parsing::SyntaxSet::syntaxes",
    "syntect::parsing::SyntaxSet",
    "syntect::parsing::SyntaxSetBuilder::add_from_folder",
    "syntect::parsing::SyntaxSetBuilder::add_plain_text_syntax",
    "syntect::parsing::SyntaxSetBuilder::add",
    "syntect::parsing::SyntaxSetBuilder::build",
    "syntect::parsing::SyntaxSetBuilder::new",
    "syntect::parsing::SyntaxSetBuilder::syntaxes",
    "syntect::parsing::SyntaxSetBuilder",
    "syntect::parsing",
    "syntect::util::as_24_bit_terminal_escaped",
    "syntect::util::as_latex_escaped",
    "syntect::util::debug_print_ops",
    "syntect::util::LinesWithEndings::from",
    "syntect::util::LinesWithEndings",
    "syntect::util::modify_range",
    "syntect::util::split_at",
    "syntect::util",
    "syntect",
];
